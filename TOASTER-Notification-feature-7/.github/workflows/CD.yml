name: CD

on:
  push:
    branches: [ "develop" ]

jobs:
  deploy-ci:
    runs-on: ubuntu-22.04
    env:
      working-directory: server/toaster

    steps: 
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: application.yaml 생성
      run: | 
          cd src/main/resources
          echo "${{ secrets.APPLICATION }}" > ./application-dev.yaml
      working-directory: ${{ env.working-directory }}

    - name: toaster-firebase-admin-sdk.json 생성
      id: create-json
      uses: jsdaniell/create-json@1.1.2
      with:
          name: "toaster-firebase-admin-sdk.json"
          json: ${{ secrets.TOASTER_FIREBASE_ADMIN_SDK }}
          dir: '${{ env.working-directory }}/src/main/resources/'
          
    - name: 빌드
      run: |
          chmod +x gradlew
          ./gradlew build -x test
      working-directory: ${{ env.working-directory }}
      shell: bash

    - name: docker build 가능하도록 환경 설정
      uses: docker/setup-buildx-action@v2.9.1
      
    - name: docker hub에로그인
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKERHUB_LOGIN_USERNAME }}
        password: ${{ secrets.DOCKERHUB_LOGIN_ACCESSTOKEN }}

    - name: docker image 빌드 및 푸시
      run: |
        docker build --platform linux/amd64 -t mmihye/toaster_notification .
        docker push mmihye/toaster_notification
      working-directory: ${{ env.working-directory }}

  deploy-cd:      
    needs: deploy-ci
    runs-on: ubuntu-22.04

    steps:    
    - name: 도커 컨테이너 실행
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.RELEASE_SERVER_IP }}
        username: ${{ secrets.RELEASE_SERVER_USER }}
        key: ${{ secrets.RELEASE_SERVER_KEY }}
        script: |
          cd ~
          ./deploy.sh
